{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/lib/utils.ts"],"sourcesContent":["import { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/components/ui/TextGenerateEffect.tsx"],"sourcesContent":["\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, stagger, useAnimate } from \"motion/react\";\nimport { useEffect } from \"react\";\n\nexport const TextGenerateEffect = ({\n    words,\n    className,\n    filter = true,\n    duration = 0.5,\n}: {\n    words: string;\n    className?: string;\n    filter?: boolean;\n    duration?: number;\n}) => {\n    const [scope, animate] = useAnimate();\n    let wordsArray = words.split(\" \");\n    useEffect(() => {\n        animate(\n            \"span\",\n            {\n                opacity: 1,\n                filter: filter ? \"blur(0px)\" : \"none\",\n            },\n            {\n                duration: duration ? duration : 1,\n                delay: stagger(0.2),\n            }\n        );\n    }, [scope.current]);\n\n    const renderWords = () => {\n        return (\n            <motion.div ref={scope}>\n                {wordsArray.map((word, idx) => {\n                    return (\n                        <motion.span\n                            key={word + idx}\n                            // change here if idx is greater than 3, change the text color to #CBACF9\n                            className={`${idx > 3 ? \"text-purple\" : \"dark:text-white text-black\"} opacity-0`}\n                            style={{\n                                filter: filter ? \"blur(10px)\" : \"none\",\n                            }}\n                        >\n                            {word}{\" \"}\n                        </motion.span>\n                    );\n                })}\n            </motion.div>\n        );\n    };\n\n    return (\n        <div className={cn(\"font-bold\", className)}>\n            <div className=\"my-4\">\n                <div className=\" dark:text-white text-black leading-snug tracking-wide\">\n                    {renderWords()}\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AACA;;;AAHA;;;;AAKO,MAAM,qBAAqB,CAAC,EAC/B,KAAK,EACL,SAAS,EACT,SAAS,IAAI,EACb,WAAW,GAAG,EAMjB;;IACG,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAA,GAAA,kNAAA,CAAA,aAAU,AAAD;IAClC,IAAI,aAAa,MAAM,KAAK,CAAC;IAC7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACN,QACI,QACA;gBACI,SAAS;gBACT,QAAQ,SAAS,cAAc;YACnC,GACA;gBACI,UAAU,WAAW,WAAW;gBAChC,OAAO,CAAA,GAAA,2MAAA,CAAA,UAAO,AAAD,EAAE;YACnB;QAER;uCAAG;QAAC,MAAM,OAAO;KAAC;IAElB,MAAM,cAAc;QAChB,qBACI,6LAAC,qNAAA,CAAA,SAAM,CAAC,GAAG;YAAC,KAAK;sBACZ,WAAW,GAAG,CAAC,CAAC,MAAM;gBACnB,qBACI,6LAAC,qNAAA,CAAA,SAAM,CAAC,IAAI;oBAER,yEAAyE;oBACzE,WAAW,GAAG,MAAM,IAAI,gBAAgB,6BAA6B,UAAU,CAAC;oBAChF,OAAO;wBACH,QAAQ,SAAS,eAAe;oBACpC;;wBAEC;wBAAM;;mBAPF,OAAO;;;;;YAUxB;;;;;;IAGZ;IAEA,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;kBAC5B,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACV;;;;;;;;;;;;;;;;AAKrB;GAzDa;;QAWgB,kNAAA,CAAA,aAAU;;;KAX1B","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/components/ui/FloatingNav.tsx"],"sourcesContent":["\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport {\n    AnimatePresence,\n    motion,\n    useMotionValueEvent,\n    useScroll,\n} from \"motion/react\";\nimport { useState } from \"react\";\n\n\nexport const FloatingNav = ({\n    navItems,\n    className,\n}: {\n    navItems: {\n        name: string;\n        link: string;\n        icon?: React.ReactNode;\n    }[];\n    className?: string;\n}) => {\n    const { scrollYProgress } = useScroll();\n\n    const [visible, setVisible] = useState(false);\n\n    useMotionValueEvent(scrollYProgress, \"change\", (current) => {\n        // Check if current is not undefined and is a number\n        if (typeof current === \"number\") {\n            let direction = current! - scrollYProgress.getPrevious()!;\n\n            if (scrollYProgress.get() < 0.05) {\n                setVisible(false);\n            } else {\n                if (direction < 0) {\n                    setVisible(true);\n                } else {\n                    setVisible(false);\n                }\n            }\n        }\n    });\n\n    return (\n        <AnimatePresence mode=\"wait\">\n            <motion.div\n                initial={{\n                    opacity: 1,\n                    y: -100,\n                }}\n                animate={{\n                    y: visible ? 0 : -100,\n                    opacity: visible ? 1 : 0,\n                }}\n                transition={{\n                    duration: 0.2,\n                }}\n                className={cn(\n                    \"flex max-w-fit  fixed top-10 inset-x-0 mx-auto border border-transparent dark:border-white/[0.2] rounded-full dark:bg-black bg-white shadow-[0px_2px_3px_-1px_rgba(0,0,0,0.1),0px_1px_0px_0px_rgba(25,28,33,0.02),0px_0px_0px_1px_rgba(25,28,33,0.08)] z-[5000] pr-2 pl-8 py-2  items-center justify-center space-x-4\",\n                    className\n                )}\n            >\n                {navItems.map((navItem: any, idx: number) => (\n                    <a\n                        key={`link=${idx}`}\n                        href={navItem.link}\n                        className={cn(\n                            \"relative dark:text-neutral-50 items-center flex space-x-1 text-neutral-600 dark:hover:text-neutral-300 hover:text-neutral-500\"\n                        )}\n                    >\n                        <span className=\"block sm:hidden\">{navItem.icon}</span>\n                        <span className=\"hidden sm:block text-sm\">{navItem.name}</span>\n                    </a>\n                ))}\n                <button className=\"border text-sm font-medium relative border-neutral-200 dark:border-white/[0.2] text-black dark:text-white px-4 py-2 rounded-full\">\n                    <span>Login</span>\n                    <span className=\"absolute inset-x-0 w-1/2 mx-auto -bottom-px bg-gradient-to-r from-transparent via-blue-500 to-transparent  h-px\" />\n                </button>\n            </motion.div>\n        </AnimatePresence>\n    );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAMA;;;AARA;;;;AAWO,MAAM,cAAc,CAAC,EACxB,QAAQ,EACR,SAAS,EAQZ;;IACG,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,oMAAA,CAAA,YAAS,AAAD;IAEpC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,sNAAA,CAAA,sBAAmB,AAAD,EAAE,iBAAiB;2CAAU,CAAC;YAC5C,oDAAoD;YACpD,IAAI,OAAO,YAAY,UAAU;gBAC7B,IAAI,YAAY,UAAW,gBAAgB,WAAW;gBAEtD,IAAI,gBAAgB,GAAG,KAAK,MAAM;oBAC9B,WAAW;gBACf,OAAO;oBACH,IAAI,YAAY,GAAG;wBACf,WAAW;oBACf,OAAO;wBACH,WAAW;oBACf;gBACJ;YACJ;QACJ;;IAEA,qBACI,6LAAC,oNAAA,CAAA,kBAAe;QAAC,MAAK;kBAClB,cAAA,6LAAC,qNAAA,CAAA,SAAM,CAAC,GAAG;YACP,SAAS;gBACL,SAAS;gBACT,GAAG,CAAC;YACR;YACA,SAAS;gBACL,GAAG,UAAU,IAAI,CAAC;gBAClB,SAAS,UAAU,IAAI;YAC3B;YACA,YAAY;gBACR,UAAU;YACd;YACA,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,yTACA;;gBAGH,SAAS,GAAG,CAAC,CAAC,SAAc,oBACzB,6LAAC;wBAEG,MAAM,QAAQ,IAAI;wBAClB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR;;0CAGJ,6LAAC;gCAAK,WAAU;0CAAmB,QAAQ,IAAI;;;;;;0CAC/C,6LAAC;gCAAK,WAAU;0CAA2B,QAAQ,IAAI;;;;;;;uBAPlD,CAAC,KAAK,EAAE,KAAK;;;;;8BAU1B,6LAAC;oBAAO,WAAU;;sCACd,6LAAC;sCAAK;;;;;;sCACN,6LAAC;4BAAK,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKpC;GAtEa;;QAWmB,oMAAA,CAAA,YAAS;QAIrC,sNAAA,CAAA,sBAAmB;;;KAfV","debugId":null}}]
}
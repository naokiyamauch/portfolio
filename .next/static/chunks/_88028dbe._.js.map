{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/components/ui/Globe.tsx"],"sourcesContent":["'use client';\nimport countries from '@/data/globe.json';\nimport { OrbitControls } from '@react-three/drei';\nimport { Canvas, extend, useThree } from '@react-three/fiber';\nimport { useEffect, useRef, useState } from 'react';\nimport { Color, Fog, PerspectiveCamera, Scene, Vector3 } from 'three';\nimport ThreeGlobe from 'three-globe';\ndeclare module '@react-three/fiber' {\n\tinterface ThreeElements {\n\t\tthreeGlobe: ThreeElements['mesh'] & {\n\t\t\tnew (): ThreeGlobe;\n\t\t};\n\t}\n}\n\nextend({ ThreeGlobe: ThreeGlobe });\n\nconst RING_PROPAGATION_SPEED = 3;\nconst aspect = 1.2;\nconst cameraZ = 300;\n\ntype Position = {\n\torder: number;\n\tstartLat: number;\n\tstartLng: number;\n\tendLat: number;\n\tendLng: number;\n\tarcAlt: number;\n\tcolor: string;\n};\n\nexport type GlobeConfig = {\n\tpointSize?: number;\n\tglobeColor?: string;\n\tshowAtmosphere?: boolean;\n\tatmosphereColor?: string;\n\tatmosphereAltitude?: number;\n\temissive?: string;\n\temissiveIntensity?: number;\n\tshininess?: number;\n\tpolygonColor?: string;\n\tambientLight?: string;\n\tdirectionalLeftLight?: string;\n\tdirectionalTopLight?: string;\n\tpointLight?: string;\n\tarcTime?: number;\n\tarcLength?: number;\n\trings?: number;\n\tmaxRings?: number;\n\tinitialPosition?: {\n\t\tlat: number;\n\t\tlng: number;\n\t};\n\tautoRotate?: boolean;\n\tautoRotateSpeed?: number;\n};\n\ninterface WorldProps {\n\tglobeConfig: GlobeConfig;\n\tdata: Position[];\n}\n\nconst numbersOfRings = [0];\n\nexport function Globe({ globeConfig, data }: WorldProps) {\n\tconst globeRef = useRef<ThreeGlobe | null>(null);\n\tconst groupRef = useRef();\n\tconst [isInitialized, setIsInitialized] = useState(false);\n\n\tconst defaultProps = {\n\t\tpointSize: 1,\n\t\tatmosphereColor: '#ffffff',\n\t\tshowAtmosphere: true,\n\t\tatmosphereAltitude: 0.1,\n\t\tpolygonColor: 'rgba(255,255,255,0.7)',\n\t\tglobeColor: '#1d072e',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 0.1,\n\t\tshininess: 0.9,\n\t\tarcTime: 2000,\n\t\tarcLength: 0.9,\n\t\trings: 1,\n\t\tmaxRings: 3,\n\t\t...globeConfig,\n\t};\n\n\t// Initialize globe only once\n\tuseEffect(() => {\n\t\tif (!globeRef.current && groupRef.current) {\n\t\t\tglobeRef.current = new ThreeGlobe();\n\t\t\t(groupRef.current as any).add(globeRef.current);\n\t\t\tsetIsInitialized(true);\n\t\t}\n\t}, []);\n\n\t// Build material when globe is initialized or when relevant props change\n\tuseEffect(() => {\n\t\tif (!globeRef.current || !isInitialized) return;\n\n\t\tconst globeMaterial = globeRef.current.globeMaterial() as unknown as {\n\t\t\tcolor: Color;\n\t\t\temissive: Color;\n\t\t\temissiveIntensity: number;\n\t\t\tshininess: number;\n\t\t};\n\t\tglobeMaterial.color = new Color(globeConfig.globeColor);\n\t\tglobeMaterial.emissive = new Color(globeConfig.emissive);\n\t\tglobeMaterial.emissiveIntensity = globeConfig.emissiveIntensity || 0.1;\n\t\tglobeMaterial.shininess = globeConfig.shininess || 0.9;\n\t}, [\n\t\tisInitialized,\n\t\tglobeConfig.globeColor,\n\t\tglobeConfig.emissive,\n\t\tglobeConfig.emissiveIntensity,\n\t\tglobeConfig.shininess,\n\t]);\n\n\t// Build data when globe is initialized or when data changes\n\tuseEffect(() => {\n\t\tif (!globeRef.current || !isInitialized || !data) return;\n\n\t\tconst arcs = data;\n\t\tconst points = [];\n\t\tfor (let i = 0; i < arcs.length; i++) {\n\t\t\tconst arc = arcs[i];\n\t\t\tconst rgb = hexToRgb(arc.color) as {\n\t\t\t\tr: number;\n\t\t\t\tg: number;\n\t\t\t\tb: number;\n\t\t\t};\n\t\t\tpoints.push({\n\t\t\t\tsize: defaultProps.pointSize,\n\t\t\t\torder: arc.order,\n\t\t\t\tcolor: arc.color,\n\t\t\t\tlat: arc.startLat,\n\t\t\t\tlng: arc.startLng,\n\t\t\t});\n\t\t\tpoints.push({\n\t\t\t\tsize: defaultProps.pointSize,\n\t\t\t\torder: arc.order,\n\t\t\t\tcolor: arc.color,\n\t\t\t\tlat: arc.endLat,\n\t\t\t\tlng: arc.endLng,\n\t\t\t});\n\t\t}\n\n\t\t// remove duplicates for same lat and lng\n\t\tconst filteredPoints = points.filter(\n\t\t\t(v, i, a) =>\n\t\t\t\ta.findIndex((v2) =>\n\t\t\t\t\t['lat', 'lng'].every(\n\t\t\t\t\t\t(k) => v2[k as 'lat' | 'lng'] === v[k as 'lat' | 'lng']\n\t\t\t\t\t)\n\t\t\t\t) === i\n\t\t);\n\n\t\tglobeRef.current\n\t\t\t.hexPolygonsData(countries.features)\n\t\t\t.hexPolygonResolution(3)\n\t\t\t.hexPolygonMargin(0.7)\n\t\t\t.showAtmosphere(defaultProps.showAtmosphere)\n\t\t\t.atmosphereColor(defaultProps.atmosphereColor)\n\t\t\t.atmosphereAltitude(defaultProps.atmosphereAltitude)\n\t\t\t.hexPolygonColor(() => defaultProps.polygonColor);\n\n\t\tglobeRef.current\n\t\t\t.arcsData(data)\n\t\t\t.arcStartLat((d) => (d as { startLat: number }).startLat * 1)\n\t\t\t.arcStartLng((d) => (d as { startLng: number }).startLng * 1)\n\t\t\t.arcEndLat((d) => (d as { endLat: number }).endLat * 1)\n\t\t\t.arcEndLng((d) => (d as { endLng: number }).endLng * 1)\n\t\t\t.arcColor((e: any) => (e as { color: string }).color)\n\t\t\t.arcAltitude((e) => (e as { arcAlt: number }).arcAlt * 1)\n\t\t\t.arcStroke(() => [0.32, 0.28, 0.3][Math.round(Math.random() * 2)])\n\t\t\t.arcDashLength(defaultProps.arcLength)\n\t\t\t.arcDashInitialGap((e) => (e as { order: number }).order * 1)\n\t\t\t.arcDashGap(15)\n\t\t\t.arcDashAnimateTime(() => defaultProps.arcTime);\n\n\t\tglobeRef.current\n\t\t\t.pointsData(filteredPoints)\n\t\t\t.pointColor((e) => (e as { color: string }).color)\n\t\t\t.pointsMerge(true)\n\t\t\t.pointAltitude(0.0)\n\t\t\t.pointRadius(2);\n\n\t\tglobeRef.current\n\t\t\t.ringsData([])\n\t\t\t.ringColor(() => defaultProps.polygonColor)\n\t\t\t.ringMaxRadius(defaultProps.maxRings)\n\t\t\t.ringPropagationSpeed(RING_PROPAGATION_SPEED)\n\t\t\t.ringRepeatPeriod(\n\t\t\t\t(defaultProps.arcTime * defaultProps.arcLength) /\n\t\t\t\t\tdefaultProps.rings\n\t\t\t);\n\t}, [\n\t\tisInitialized,\n\t\tdata,\n\t\tdefaultProps.pointSize,\n\t\tdefaultProps.showAtmosphere,\n\t\tdefaultProps.atmosphereColor,\n\t\tdefaultProps.atmosphereAltitude,\n\t\tdefaultProps.polygonColor,\n\t\tdefaultProps.arcLength,\n\t\tdefaultProps.arcTime,\n\t\tdefaultProps.rings,\n\t\tdefaultProps.maxRings,\n\t]);\n\n\t// Handle rings animation with cleanup\n\tuseEffect(() => {\n\t\tif (!globeRef.current || !isInitialized || !data) return;\n\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!globeRef.current) return;\n\n\t\t\tconst newNumbersOfRings = genRandomNumbers(\n\t\t\t\t0,\n\t\t\t\tdata.length,\n\t\t\t\tMath.floor((data.length * 4) / 5)\n\t\t\t);\n\n\t\t\tconst ringsData = data\n\t\t\t\t.filter((d, i) => newNumbersOfRings.includes(i))\n\t\t\t\t.map((d) => ({\n\t\t\t\t\tlat: d.startLat,\n\t\t\t\t\tlng: d.startLng,\n\t\t\t\t\tcolor: d.color,\n\t\t\t\t}));\n\n\t\t\tglobeRef.current.ringsData(ringsData);\n\t\t}, 2000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [isInitialized, data]);\n\n\treturn <group ref={groupRef} />;\n}\n\nexport function WebGLRendererConfig() {\n\tconst { gl, size } = useThree();\n\n\tuseEffect(() => {\n\t\tgl.setPixelRatio(window.devicePixelRatio);\n\t\tgl.setSize(size.width, size.height);\n\t\tgl.setClearColor(0xffaaff, 0);\n\t}, []);\n\n\treturn null;\n}\n\nexport function World(props: WorldProps) {\n\tconst { globeConfig } = props;\n\tconst scene = new Scene();\n\tscene.fog = new Fog(0xffffff, 400, 2000);\n\treturn (\n\t\t<Canvas\n\t\t\tscene={scene}\n\t\t\tcamera={new PerspectiveCamera(50, aspect, 180, 1800)}\n\t\t>\n\t\t\t<WebGLRendererConfig />\n\t\t\t<ambientLight color={globeConfig.ambientLight} intensity={0.6} />\n\t\t\t<directionalLight\n\t\t\t\tcolor={globeConfig.directionalLeftLight}\n\t\t\t\tposition={new Vector3(-400, 100, 400)}\n\t\t\t/>\n\t\t\t<directionalLight\n\t\t\t\tcolor={globeConfig.directionalTopLight}\n\t\t\t\tposition={new Vector3(-200, 500, 200)}\n\t\t\t/>\n\t\t\t<pointLight\n\t\t\t\tcolor={globeConfig.pointLight}\n\t\t\t\tposition={new Vector3(-200, 500, 200)}\n\t\t\t\tintensity={0.8}\n\t\t\t/>\n\t\t\t<Globe {...props} />\n\t\t\t<OrbitControls\n\t\t\t\tenablePan={false}\n\t\t\t\tenableZoom={false}\n\t\t\t\tminDistance={cameraZ}\n\t\t\t\tmaxDistance={cameraZ}\n\t\t\t\tautoRotateSpeed={1}\n\t\t\t\tautoRotate={true}\n\t\t\t\tminPolarAngle={Math.PI / 3.5}\n\t\t\t\tmaxPolarAngle={Math.PI - Math.PI / 3}\n\t\t\t/>\n\t\t</Canvas>\n\t);\n}\n\nexport function hexToRgb(hex: string) {\n\tconst shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\n\t\treturn r + r + g + g + b + b;\n\t});\n\n\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result\n\t\t? {\n\t\t\t\tr: parseInt(result[1], 16),\n\t\t\t\tg: parseInt(result[2], 16),\n\t\t\t\tb: parseInt(result[3], 16),\n\t\t  }\n\t\t: null;\n}\n\nexport function genRandomNumbers(min: number, max: number, count: number) {\n\tconst arr = [];\n\twhile (arr.length < count) {\n\t\tconst r = Math.floor(Math.random() * (max - min)) + min;\n\t\tif (arr.indexOf(r) === -1) arr.push(r);\n\t}\n\n\treturn arr;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/lib/utils.ts"],"sourcesContent":["import { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/naokiyamauchi/github/portfolio/components/ui/TextGenerateEffect.tsx"],"sourcesContent":["\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, stagger, useAnimate } from \"motion/react\";\nimport { useEffect } from \"react\";\n\nexport const TextGenerateEffect = ({\n    words,\n    className,\n    filter = true,\n    duration = 0.5,\n}: {\n    words: string;\n    className?: string;\n    filter?: boolean;\n    duration?: number;\n}) => {\n    const [scope, animate] = useAnimate();\n    let wordsArray = words.split(\" \");\n    useEffect(() => {\n        animate(\n            \"span\",\n            {\n                opacity: 1,\n                filter: filter ? \"blur(0px)\" : \"none\",\n            },\n            {\n                duration: duration ? duration : 1,\n                delay: stagger(0.2),\n            }\n        );\n    }, [scope.current]);\n\n    const renderWords = () => {\n        return (\n            <motion.div ref={scope}>\n                {wordsArray.map((word, idx) => {\n                    return (\n                        <motion.span\n                            key={word + idx}\n                            // change here if idx is greater than 3, change the text color to #CBACF9\n                            className={`${idx > 3 ? \"text-purple\" : \"dark:text-white text-black\"} opacity-0`}\n                            style={{\n                                filter: filter ? \"blur(10px)\" : \"none\",\n                            }}\n                        >\n                            {word}{\" \"}\n                        </motion.span>\n                    );\n                })}\n            </motion.div>\n        );\n    };\n\n    return (\n        <div className={cn(\"font-bold\", className)}>\n            <div className=\"my-4\">\n                <div className=\" dark:text-white text-black leading-snug tracking-wide\">\n                    {renderWords()}\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AACA;;;AAHA;;;;AAKO,MAAM,qBAAqB,CAAC,EAC/B,KAAK,EACL,SAAS,EACT,SAAS,IAAI,EACb,WAAW,GAAG,EAMjB;;IACG,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAA,GAAA,kNAAA,CAAA,aAAU,AAAD;IAClC,IAAI,aAAa,MAAM,KAAK,CAAC;IAC7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACN,QACI,QACA;gBACI,SAAS;gBACT,QAAQ,SAAS,cAAc;YACnC,GACA;gBACI,UAAU,WAAW,WAAW;gBAChC,OAAO,CAAA,GAAA,2MAAA,CAAA,UAAO,AAAD,EAAE;YACnB;QAER;uCAAG;QAAC,MAAM,OAAO;KAAC;IAElB,MAAM,cAAc;QAChB,qBACI,6LAAC,qNAAA,CAAA,SAAM,CAAC,GAAG;YAAC,KAAK;sBACZ,WAAW,GAAG,CAAC,CAAC,MAAM;gBACnB,qBACI,6LAAC,qNAAA,CAAA,SAAM,CAAC,IAAI;oBAER,yEAAyE;oBACzE,WAAW,GAAG,MAAM,IAAI,gBAAgB,6BAA6B,UAAU,CAAC;oBAChF,OAAO;wBACH,QAAQ,SAAS,eAAe;oBACpC;;wBAEC;wBAAM;;mBAPF,OAAO;;;;;YAUxB;;;;;;IAGZ;IAEA,qBACI,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;kBAC5B,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACV;;;;;;;;;;;;;;;;AAKrB;GAzDa;;QAWgB,kNAAA,CAAA,aAAU;;;KAX1B","debugId":null}}]
}